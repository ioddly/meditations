{% extends "base.htm" %}

{% block title %}Habits Visualization{% endblock %}

{% block content %}
<div id=chart>
</div>

<p>Note: visualization currently does not include multiple tasks of the same name per day.</p>
{% endblock %}

{% block script %}

{% if Config.Webpack %}

{% else %}
  <script src="/node_modules/d3/build/d3.js"></script>
{% endif %}

<script type="text/javascript">
$(document).ready(function() {
  console.log("Habits visualization ready.");

  var links = [ {% for year in HabitYearLinks %}
    "{{ year.Text }}",
  {% endfor %}
  ].reverse();

  for(var i = 0; i != links.length; i++) {
    var begin = moment(links[i], 'YY');
    var end = begin.clone().endOf('year');

    console.log("hello");
    $.get("/habits/visualize/range?begin="+begin.format('YYYY-MM-DD')+"&end="+end.format('YYYY-MM-DD'), function(results) {
      console.log(results);
    });

    var svg = d3.select("#chart").append("svg").attr("width", "100%").attr("height", 200);

    var circle = svg.append("circle").attr("cx", 30).attr("cy", 30).attr("r", 20);

    var width = svg.style("width"), height = svg.style("height");

    var x = d3.scaleTime().rangeRound([0, width]);
    var y = d3.scaleLinear().rangeRound([height, 0]);

    // A rough outline of how this breaks down
    // Loop over days
    // Loop over tasks in each day
    // Get Y position from task name, largest tasks first (for example, if "exercise" has the most entries 
    // it will result in a larger rectangle and be at the top)

    // Rectangle breaks when streak is broken.


    console.log(width);
    console.log(svg);

  }

  console.log('years', links);
});
</script>

{% endblock %}
